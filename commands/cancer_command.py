# commands/cancer_command.py

import discord
from discord import app_commands
from datetime import datetime
import aiohttp
import io


# ---------- Modal 1 ----------
class CancerModal1(discord.ui.Modal, title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á (1/2)"):
    patient_name = discord.ui.TextInput(
        label="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢",
        placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢",
        required=True
    )
    cancer_stage = discord.ui.TextInput(
        label="‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á‡∏£‡∏∞‡∏î‡∏±‡∏ö",
        placeholder="1 / 2 / 3 / 4",
        required=True,
        max_length=1
    )
    symptoms = discord.ui.TextInput(
        label="‡∏≠‡∏≤‡∏Å‡∏≤‡∏£",
        placeholder="‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢",
        style=discord.TextStyle.paragraph,
        required=True
    )

    def __init__(self, attachment: discord.Attachment):
        super().__init__()
        self.attachment = attachment

    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.send_message(
            content="‚úÖ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1 ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2",
            view=CancerStep2Button(
                attachment=self.attachment,
                patient_name=self.patient_name.value,
                cancer_stage=self.cancer_stage.value,
                symptoms=self.symptoms.value
            ),
            ephemeral=True
        )


# ---------- Button View ‡πÄ‡∏õ‡∏¥‡∏î Modal 2 ----------
class CancerStep2Button(discord.ui.View):
    def __init__(self, attachment, patient_name, cancer_stage, symptoms):
        super().__init__(timeout=None)
        self.attachment = attachment
        self.patient_name = patient_name
        self.cancer_stage = cancer_stage
        self.symptoms = symptoms

    @discord.ui.button(label="‡πÑ‡∏õ‡∏ï‡πà‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2", style=discord.ButtonStyle.primary)
    async def continue_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(
            CancerModal2(
                attachment=self.attachment,
                patient_name=self.patient_name,
                cancer_stage=self.cancer_stage,
                symptoms=self.symptoms
            )
        )


# ---------- Modal 2 ----------
class CancerModal2(discord.ui.Modal, title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á (2/2)"):
    treatment = discord.ui.TextInput(
        label="‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤",
        placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏ú‡πà‡∏≤‡∏ï‡∏±‡∏î / ‡πÄ‡∏Ñ‡∏°‡∏µ‡∏ö‡∏≥‡∏ö‡∏±‡∏î / ‡∏£‡∏±‡∏á‡∏™‡∏µ‡∏£‡∏±‡∏Å‡∏©‡∏≤",
        style=discord.TextStyle.paragraph,
        required=True
    )
    appointment_date = discord.ui.TextInput(
        label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏î (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö DD/MM/YYYY - DD/MM/YYYY)",
        placeholder="‡πÄ‡∏ä‡πà‡∏ô 04/09/2025 - 08/09/2025",
        required=True
    )
    appointment_time = discord.ui.TextInput(
        label="‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏î",
        placeholder="‡πÄ‡∏ä‡πà‡∏ô 12.00 ‡∏ô.",
        required=True
    )

    def __init__(self, attachment: discord.Attachment, patient_name: str, cancer_stage: str, symptoms: str):
        super().__init__()
        self.attachment = attachment
        self.patient_name = patient_name
        self.cancer_stage = cancer_stage
        self.symptoms = symptoms

    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.defer()

        # ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(self.attachment.url) as resp:
                    if resp.status != 200:
                        await interaction.followup.send(
                            "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÑ‡∏î‡πâ", ephemeral=True)
                        return
                    data = await resp.read()
                    file = discord.File(io.BytesIO(data), filename=self.attachment.filename)
        except Exception as e:
            await interaction.followup.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ: {e}", ephemeral=True)
            return

        # ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢
        now = datetime.utcnow()
        now_thai = now.astimezone(datetime.now().astimezone().tzinfo)  # local timezone
        timestamp_str = now_thai.strftime("%d.%m.%Y - %H:%M:%S")

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏£‡∏∏‡∏õ
        summary = (
            f"**[‡πÉ‡∏ö‡∏ô‡∏±‡∏î‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á]**\n"
            f"‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠ : {self.patient_name} ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á‡∏õ‡∏≠‡∏î‡∏£‡∏∞‡∏î‡∏±‡∏ö {self.cancer_stage} | "
            f"‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£ {self.symptoms} ‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÇ‡∏î‡∏¢ {self.treatment.value} | "
            f"‡∏ô‡∏±‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {self.appointment_date.value} ‡πÄ‡∏ß‡∏•‡∏≤ {self.appointment_time.value}"
        )

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed
        embed = discord.Embed(
            title="ü©∫ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á",
            description=summary,
            color=discord.Color.purple()
        )

        embed.add_field(name="üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢", value=self.patient_name, inline=False)
        embed.add_field(name="üî¨ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á", value=self.cancer_stage, inline=True)
        embed.add_field(name="ü©π ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£", value=self.symptoms, inline=False)
        embed.add_field(name="üíä ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤", value=self.treatment.value, inline=False)
        embed.add_field(name="üóìÔ∏è ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏î", value=self.appointment_date.value, inline=True)
        embed.add_field(name="‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏î", value=self.appointment_time.value, inline=True)

        embed.set_image(url=f"attachment://{self.attachment.filename}")
        embed.set_footer(text=f"‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏î‡∏¢: {interaction.user.display_name}")
        embed.timestamp = interaction.created_at

        await interaction.followup.send(embed=embed, file=file)


# ---------- Slash Command ----------
@app_commands.command(
    name="‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á",
    description="‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á"
)
@app_commands.describe(image="‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á")
async def cancer(interaction: discord.Interaction, image: discord.Attachment):
    if not image.content_type or not image.content_type.startswith("image/"):
        await interaction.response.send_message("‚ùå ‡πÇ‡∏õ‡∏£‡∏î‡πÅ‡∏ô‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û", ephemeral=True)
        return

    modal = CancerModal1(attachment=image)
    await interaction.response.send_modal(modal)
